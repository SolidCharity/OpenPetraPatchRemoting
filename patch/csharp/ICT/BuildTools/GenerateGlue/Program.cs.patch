--- openpetraNow.freeze2014_05/csharp/ICT/BuildTools/GenerateGlue/Program.cs	2014-05-16 08:51:14.000000000 +0200
+++ openpetraNow.PatchRemoting/csharp/ICT/BuildTools/GenerateGlue/Program.cs	2014-05-16 08:52:04.000000000 +0200
@@ -4,7 +4,7 @@
 // @Authors:
 //       timop
 //
-// Copyright 2004-2012 by OM International
+// Copyright 2004-2013 by OM International
 //
 // This file is part of OpenPetra.org.
 //
@@ -32,6 +32,7 @@
 using Ict.Common.IO;
 using Ict.Tools.CodeGeneration;
 using GenerateSharedCode;
+using GenerateGlue;
 
 namespace Ict.Tools.GenerateGlue
 {
@@ -99,12 +100,27 @@
 
             try
             {
+                /*
+                 * CreateInstantiators instantiators = new CreateInstantiators();
+                 * instantiators.CreateFiles(namespaceRoot, OutputDir + "/Server/lib", cmd.GetOptValue("TemplateDir"));
+                 * TCreateConnectors connectors = new TCreateConnectors();
+                 * connectors.CreateFiles(namespaceRoot, OutputDir + "/Server/lib", cmd.GetOptValue("TemplateDir"));
+                 */
+
                 CreateInterfaces interfaces = new CreateInterfaces();
                 interfaces.CreateFiles(namespaceRoot, OutputDir + "/Shared/lib/Interfaces", cmd.GetOptValue("TemplateDir"));
-                CreateInstantiators instantiators = new CreateInstantiators();
-                instantiators.CreateFiles(namespaceRoot, OutputDir + "/Server/lib", cmd.GetOptValue("TemplateDir"));
-                TCreateConnectors connectors = new TCreateConnectors();
-                connectors.CreateFiles(namespaceRoot, OutputDir + "/Server/lib", cmd.GetOptValue("TemplateDir"));
+                GenerateClientGlue.GenerateCode(namespaceRoot, OutputDir + "/Client/app/Core/Remoteobjects", cmd.GetOptValue("TemplateDir"));
+                GenerateClientGlue.GenerateConnectorCode(OutputDir + "/../Common/Remoting/Client", cmd.GetOptValue("TemplateDir"));
+                GenerateServerGlue.GenerateCode(namespaceRoot, OutputDir + "/Server/app/WebService", cmd.GetOptValue("TemplateDir"));
+
+                namespaceRoot = new TNamespace();
+                TNamespace ServerAdminNamespace = new TNamespace("ServerAdmin");
+                namespaceRoot.Children.Add("ServerAdmin", ServerAdminNamespace);
+                TNamespace ServerAdminWebConnectorNamespace = new TNamespace("WebConnectors");
+                ServerAdminNamespace.Children.Add("WebConnectors", ServerAdminWebConnectorNamespace);
+
+                GenerateServerGlue.GenerateCode(namespaceRoot, OutputDir + "/Server/app/WebService", cmd.GetOptValue("TemplateDir"));
+                GenerateClientGlue.GenerateCode(namespaceRoot, OutputDir + "/ServerAdmin/app/Core", cmd.GetOptValue("TemplateDir"));
             }
             catch (Exception e)
             {
