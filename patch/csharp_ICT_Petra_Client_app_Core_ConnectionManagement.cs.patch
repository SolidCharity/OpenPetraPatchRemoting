--- trunk/csharp/ICT/Petra/Client/app/Core/ConnectionManagement.cs	2014-05-10 06:50:27.000000000 +0200
+++ remoting/csharp/ICT/Petra/Client/app/Core/ConnectionManagement.cs	2014-05-10 06:53:13.000000000 +0200
@@ -4,7 +4,7 @@
 // @Authors:
 //       christiank, timop
 //
-// Copyright 2004-2012 by OM International
+// Copyright 2004-2013 by OM International
 //
 // This file is part of OpenPetra.org.
 //
@@ -24,23 +24,14 @@
 using System;
 using System.Collections;
 using System.Net.Sockets;
-using System.Runtime.Remoting;
-using System.Runtime.Remoting.Lifetime;
 using System.Security.Principal;
 using System.IO;
 using Ict.Common;
-using Ict.Common.DB;
-using Ict.Common.IO;
+using Ict.Common.DB.Exceptions;
 using Ict.Common.Exceptions;
+using Ict.Common.IO;
 using Ict.Common.Remoting.Client;
 using Ict.Common.Remoting.Shared;
-using Ict.Petra.Shared.Interfaces.MCommon;
-using Ict.Petra.Shared.Interfaces.MConference;
-using Ict.Petra.Shared.Interfaces.MPartner;
-using Ict.Petra.Shared.Interfaces.MPersonnel;
-using Ict.Petra.Shared.Interfaces.MFinance;
-using Ict.Petra.Shared.Interfaces.MReporting;
-using Ict.Petra.Shared.Interfaces.MSysMan;
 using Ict.Petra.Shared.Security;
 using Ict.Petra.Shared;
 using Ict.Petra.Client.App.Core;
@@ -55,32 +46,10 @@
     /// </summary>
     public class TConnectionManagement : TConnectionManagementBase
     {
-        private String FRemotingURL_MConference;
-        private String FRemotingURL_MPartner;
-        private String FRemotingURL_MPersonnel;
-        private String FRemotingURL_MCommon;
-        private String FRemotingURL_MFinance;
-        private String FRemotingURL_MReporting;
-        private String FRemotingURL_MSysMan;
-        private IMCommonNamespace FRemoteCommonObjects;
-        private IMConferenceNamespace FRemoteConferenceObjects;
-        private IMPartnerNamespace FRemotePartnerObjects;
-        private IMPersonnelNamespace FRemotePersonnelObjects;
-        private IMFinanceNamespace FRemoteFinanceObjects;
-        private IMReportingNamespace FRemoteReportingObjects;
-        private IMSysManNamespace FRemoteSysManObjects;
-
         /// <summary>
-        /// todoComment
+        /// Connect to the server and authenticate the user
         /// </summary>
-        /// <param name="AUserName"></param>
-        /// <param name="APassword"></param>
-        /// <param name="AProcessID"></param>
-        /// <param name="AWelcomeMessage"></param>
-        /// <param name="ASystemEnabled"></param>
-        /// <param name="AError"></param>
-        /// <returns></returns>
-        public bool ConnectToServer(String AUserName,
+        public eLoginEnum ConnectToServer(String AUserName,
             String APassword,
             out Int32 AProcessID,
             out String AWelcomeMessage,
@@ -89,34 +58,27 @@
         {
             IPrincipal LocalUserInfo;
 
-            if (!ConnectToServer(AUserName, APassword, out AProcessID, out AWelcomeMessage, out ASystemEnabled, out AError, out LocalUserInfo))
+            eLoginEnum Result = ConnectToServer(AUserName,
+                APassword,
+                out AProcessID,
+                out AWelcomeMessage,
+                out ASystemEnabled,
+                out AError,
+                out LocalUserInfo);
+
+            if (Result != eLoginEnum.eLoginSucceeded)
             {
-                return false;
+                return Result;
             }
 
             Ict.Petra.Shared.UserInfo.GUserInfo = (TPetraPrincipal)LocalUserInfo;
 
-            FRemoteConferenceObjects = (IMConferenceNamespace)FConnector.GetRemoteObject(FRemotingURL_MConference, typeof(IMConferenceNamespace));
-            FRemotePersonnelObjects = (IMPersonnelNamespace)FConnector.GetRemoteObject(FRemotingURL_MPersonnel, typeof(IMPersonnelNamespace));
-            FRemoteCommonObjects = (IMCommonNamespace)FConnector.GetRemoteObject(FRemotingURL_MCommon, typeof(IMCommonNamespace));
-            FRemotePartnerObjects = (IMPartnerNamespace)FConnector.GetRemoteObject(FRemotingURL_MPartner, typeof(IMPartnerNamespace));
-            FRemoteFinanceObjects = (IMFinanceNamespace)FConnector.GetRemoteObject(FRemotingURL_MFinance, typeof(IMFinanceNamespace));
-            FRemoteReportingObjects = (IMReportingNamespace)FConnector.GetRemoteObject(FRemotingURL_MReporting, typeof(IMReportingNamespace));
-            FRemoteSysManObjects = (IMSysManNamespace)FConnector.GetRemoteObject(FRemotingURL_MSysMan, typeof(IMSysManNamespace));
-
             //
             // initialise object that holds references to all our remote object .NET Remoting Proxies
             //
-            FRemote = new TRemote(FClientManager,
-                FRemoteCommonObjects,
-                FRemoteConferenceObjects,
-                FRemotePartnerObjects,
-                FRemotePersonnelObjects,
-                FRemoteFinanceObjects,
-                FRemoteReportingObjects,
-                FRemoteSysManObjects);
+            new TRemote();
 
-            return true;
+            return eLoginEnum.eLoginSucceeded;
         }
 
         /// <summary>
@@ -124,16 +86,14 @@
         /// </summary>
         /// <param name="AUserName"></param>
         /// <param name="APassword"></param>
-        /// <param name="AClientManager"></param>
         /// <param name="AProcessID"></param>
         /// <param name="AWelcomeMessage"></param>
         /// <param name="ASystemEnabled"></param>
         /// <param name="AError"></param>
         /// <param name="AUserInfo"></param>
         /// <returns></returns>
-        protected override bool ConnectClient(String AUserName,
+        protected override eLoginEnum ConnectClient(String AUserName,
             String APassword,
-            IClientManagerInterface AClientManager,
             out Int32 AProcessID,
             out String AWelcomeMessage,
             out Boolean ASystemEnabled,
@@ -142,56 +102,22 @@
         {
             try
             {
-                if (!base.ConnectClient(AUserName,
-                        APassword,
-                        AClientManager,
-                        out AProcessID,
-                        out AWelcomeMessage,
-                        out ASystemEnabled,
-                        out AError,
-                        out AUserInfo))
-                {
-                    return false;
-                }
-
-                Ict.Petra.Shared.UserInfo.GUserInfo = (TPetraPrincipal)AUserInfo;
-
-                if (FRemotingURLs.ContainsKey(SharedConstants.REMOTINGURL_IDENTIFIER_MSYSMAN))
-                {
-                    FRemotingURL_MSysMan = (String)FRemotingURLs[SharedConstants.REMOTINGURL_IDENTIFIER_MSYSMAN];
-                }
-
-                if (FRemotingURLs.ContainsKey(SharedConstants.REMOTINGURL_IDENTIFIER_MCOMMON))
-                {
-                    FRemotingURL_MCommon = (String)FRemotingURLs[SharedConstants.REMOTINGURL_IDENTIFIER_MCOMMON];
-                }
+                eLoginEnum result = base.ConnectClient(AUserName,
+                    APassword,
+                    out AProcessID,
+                    out AWelcomeMessage,
+                    out ASystemEnabled,
+                    out AError,
+                    out AUserInfo);
 
-                if (FRemotingURLs.ContainsKey(SharedConstants.REMOTINGURL_IDENTIFIER_MCONFERENCE))
+                if (result != eLoginEnum.eLoginSucceeded)
                 {
-                    FRemotingURL_MConference = (String)FRemotingURLs[SharedConstants.REMOTINGURL_IDENTIFIER_MCONFERENCE];
+                    return result;
                 }
 
-                if (FRemotingURLs.ContainsKey(SharedConstants.REMOTINGURL_IDENTIFIER_MPARTNER))
-                {
-                    FRemotingURL_MPartner = (String)FRemotingURLs[SharedConstants.REMOTINGURL_IDENTIFIER_MPARTNER];
-                }
-
-                if (FRemotingURLs.ContainsKey(SharedConstants.REMOTINGURL_IDENTIFIER_MPERSONNEL))
-                {
-                    FRemotingURL_MPersonnel = (String)FRemotingURLs[SharedConstants.REMOTINGURL_IDENTIFIER_MPERSONNEL];
-                }
-
-                if (FRemotingURLs.ContainsKey(SharedConstants.REMOTINGURL_IDENTIFIER_MFINANCE))
-                {
-                    FRemotingURL_MFinance = (String)FRemotingURLs[SharedConstants.REMOTINGURL_IDENTIFIER_MFINANCE];
-                }
-
-                if (FRemotingURLs.ContainsKey(SharedConstants.REMOTINGURL_IDENTIFIER_MREPORTING))
-                {
-                    FRemotingURL_MReporting = (String)FRemotingURLs[SharedConstants.REMOTINGURL_IDENTIFIER_MREPORTING];
-                }
+                Ict.Petra.Shared.UserInfo.GUserInfo = (TPetraPrincipal)AUserInfo;
 
-                return true;
+                return result;
             }
             catch (ELoginFailedServerTooBusyException)
             {
